{"version":3,"sources":["../../src/components/StatusBar.tsx","../../src/components/Footer.tsx","../../src/components/Wizard.styles.ts","../../src/components/Wizard.tsx","Header.tsx","App.jsx","index.js"],"names":["StatusBarProgress","styled","props","StatusBarContainer","ButtonContainer","Button","css","WizardContainer","StepContainer","Wizard","useState","getToolset","currentStep","countSteps","React","next","previous","goToStep","lastStep","isLastStep","firstStep","isFirstStep","step","setCurrentStep","prevStep","children","className","statusBarClassName","statusBarProgressClassName","renderHeader","footerClassName","previousStepLabel","nextStepLabel","finishStepLabel","onClick","disabled","render","Text","div","Subtitle","Header","App","initialStep","onNextStep","console","log","onPreviousStep","onFinish","Step","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.dfb39b33.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport interface StatusBarProps {\n  currentStep: number\n  countSteps: number\n  statusBarClassName?: string\n  statusBarProgressClassName?: string\n}\ninterface StatusBarProgressProps {\n  currentStep: number\n  countSteps: number\n}\n\nexport const StatusBarProgress = styled.div<StatusBarProgressProps>`\n  height: 6px;\n  background-color: #4ca1ff;\n  transition: width 0.2s;\n  width: ${(props: StatusBarProps) => (100 / props.countSteps) * (props.currentStep + 1)}%;\n  border-radius: 10px;\n`\nexport const StatusBarContainer = styled.div`\n  margin-bottom: 15px;\n  background-color: #efeef5;\n  border-radius: 10px;\n`\n\nexport const StatusBar = (props: StatusBarProps) => (\n  <StatusBarContainer className={props.statusBarClassName}>\n    <StatusBarProgress\n      className={props.statusBarProgressClassName}\n      countSteps={props.countSteps}\n      currentStep={props.currentStep}\n    />\n  </StatusBarContainer>\n)\n","import React from 'react'\nimport styled, { css } from 'styled-components'\nimport { WizardFramework } from './Wizard'\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 15px 0;\n`\n\nconst Button = styled.button`\n  cursor: pointer;\n  outline: none;\n  color: white;\n  background: #0080de;\n  border: 1px solid #0080de;\n  border-radius: 4px;\n  font-family: 'Lato', sans-serif;\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.5);\n  font-size: 14px;\n  height: 40px;\n  text-transform: uppercase;\n  width: 100%;\n  -webkit-transition: all 0.25s;\n  transition: all 0.25s;\n  font-weight: bold;\n  max-width: 110px;\n  ${(props) =>\n    props.disabled &&\n    css`\n      cursor: not-allowed;\n      opacity: 0.5;\n      background-color: #ffffff;\n      border: 1px solid #eeeeee;\n      color: #0080de;\n    `};\n`\n\nexport interface FooterProps extends WizardFramework {\n  previousStepLabel?: string\n  nextStepLabel?: string\n  finishStepLabel?: string\n  className?: string\n}\n\nexport function Footer(props: FooterProps) {\n  return (\n    <ButtonContainer className={props.className}>\n      <Button onClick={props.previous} disabled={props.firstStep}>\n        {props.previousStepLabel || 'Previous'}\n      </Button>\n      <Button onClick={props.next}>\n        {props.lastStep ? props.finishStepLabel || 'Finish' : props.nextStepLabel || 'Next'}\n      </Button>\n    </ButtonContainer>\n  )\n}\n","import styled from 'styled-components'\n\nexport const WizardContainer = styled.div`\n  flex-direction: column;\n  height: 100%;\n  display: flex;\n`\nexport const StepContainer = styled.div`\n  flex: 1;\n`\n","import React, { useState } from 'react'\nimport { StatusBar } from './StatusBar'\nimport { Footer } from './Footer'\nimport { WizardContainer, StepContainer } from './Wizard.styles'\n\nexport interface WizardFramework {\n  currentStep: number\n  countSteps: number\n  next: () => any\n  previous: () => any\n  goToStep: (step: number) => any\n  lastStep: boolean\n  firstStep: boolean\n}\nexport interface WizardRenderProps extends WizardFramework {\n  render: (props: WizardFramework) => React.ReactChild\n}\n\ninterface WizardProps {\n  renderHeader: (props: WizardFramework) => React.ReactNode\n  renderStatusBar: (props: WizardFramework) => React.ReactNode\n  hideStatusBar: boolean\n  renderFooter: (props: WizardFramework) => React.ReactNode\n  hideFooter: boolean\n  onNextStep: (params: WizardFramework) => any\n  onPreviousStep: (params: WizardFramework) => any\n  onFinish: (params: WizardFramework) => any\n  children: React.ReactChild\n  initialStep?: number\n  previousStepLabel?: string\n  nextStepLabel?: string\n  finishStepLabel?: string\n  className?: string\n  footerClassName?: string\n  statusBarClassName?: string\n  statusBarProgressClassName?: string\n}\n\nexport function Wizard(props: WizardProps) {\n  const [currentStep, setCurrentStep] = useState(props.initialStep || 0)\n  const getToolset = (): WizardFramework => ({\n    currentStep,\n    countSteps: React.Children.count(props.children),\n    next: next,\n    previous: previous,\n    goToStep: goToStep,\n    lastStep: isLastStep(),\n    firstStep: isFirstStep()\n  })\n  const isLastStep = (): boolean => {\n    return currentStep === React.Children.count(props.children) - 1\n  }\n\n  const isFirstStep = (): boolean => {\n    return currentStep === 0\n  }\n  const goToStep = (step: number) => {\n    setCurrentStep(step)\n  }\n\n  const next = () => {\n    if (isLastStep()) {\n      props.onFinish(getToolset())\n    } else {\n      if (props.onNextStep) {\n        props.onNextStep(getToolset())\n      }\n      setCurrentStep((prevStep) => prevStep + 1)\n    }\n  }\n\n  const previous = () => {\n    if (!isFirstStep()) {\n      if (props.onPreviousStep) {\n        props.onPreviousStep(getToolset())\n      }\n      setCurrentStep((prevStep) => prevStep - 1)\n    }\n  }\n\n  const renderStatusBar = () => {\n    if (props.hideStatusBar) {\n      return null\n    }\n    if (props.renderStatusBar) {\n      return props.renderStatusBar(getToolset())\n    }\n    return (\n      <Wizard.StatusBar\n        statusBarClassName={props.statusBarClassName}\n        statusBarProgressClassName={props.statusBarProgressClassName}\n        currentStep={currentStep}\n        countSteps={React.Children.count(props.children)}\n      />\n    )\n  }\n\n  const renderFooter = () => {\n    if (props.hideFooter) {\n      return null\n    }\n    if (props.renderFooter) {\n      return props.renderFooter(getToolset())\n    }\n    return (\n      <Wizard.Footer\n        className={props.footerClassName}\n        {...getToolset()}\n        previousStepLabel={props.previousStepLabel}\n        nextStepLabel={props.nextStepLabel}\n        finishStepLabel={props.finishStepLabel}\n      />\n    )\n  }\n\n  const { renderHeader, children } = props\n  return (\n    <WizardContainer className={props.className}>\n      {renderStatusBar()}\n      {renderHeader(getToolset())}\n      <StepContainer>{React.cloneElement(children[currentStep], getToolset())}</StepContainer>\n      {renderFooter()}\n    </WizardContainer>\n  )\n}\n\nWizard.StatusBar = StatusBar\nWizard.Footer = Footer\nWizard.Step = ({ render, ...props }: WizardRenderProps) => (render ? render(props) : null)\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport { WizardFramework } from '../../src/components/Wizard'\n\nexport const Text = styled.div`\n  font-weight: bold;\n  font-size: 20px;\n  line-height: 1.09;\n  padding: 0;\n`\nexport const Subtitle = styled.div`\n  font-size: 14px;\n  line-height: 1.09;\n  padding: 0;\n  padding: 20px 0;\n`\n\nconst Header = (props: WizardFramework) => {\n  return (\n    <Fragment>\n      <Text>Welcome to the wizard!</Text>\n      <Subtitle>\n        This is the step {props.currentStep + 1}/{props.countSteps}\n      </Subtitle>\n    </Fragment>\n  )\n}\nexport default Header\n","import React from 'react'\nimport { Wizard } from 'react-wizard'\nimport Header from './Header'\n\nconst App = () => {\n  return (\n    <div className='app-container'>\n      <div className='white-card'>\n        <Wizard\n          className='my-wizard'\n          footerClassName='my-footer'\n          statusBarClassName='my-status-bar'\n          statusBarProgressClassName='my-progress'\n          initialStep={0}\n          renderHeader={(props) => <Header {...props} />}\n          onNextStep={({ currentStep }) => console.log('On next step ' + currentStep)}\n          onPreviousStep={({ currentStep }) => console.log('On previous step ' + currentStep)}\n          onFinish={() => console.log('Wizard finished!')}\n        >\n          <Wizard.Step\n            render={({ currentStep, next, previous, firstStep, lastStep }) => (\n              <div>\n                <div>\n                  Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et\n                  dolore magna aliqua. A erat nam at lectus urna duis convallis convallis. Turpis massa sed elementum\n                  tempus egestas sed. Sapien eget mi proin sed libero enim sed faucibus. Amet luctus venenatis lectus\n                  magna. Egestas dui id ornare arcu odio ut. Nisi vitae suscipit tellus mauris a. Rhoncus est\n                  pellentesque elit ullamcorper dignissim cras tincidunt lobortis. Dui faucibus in ornare quam viverra\n                  orci sagittis. Fermentum dui faucibus in ornare quam viverra orci sagittis eu. Integer malesuada nunc\n                  vel risus. Facilisi morbi tempus iaculis urna id volutpat lacus laoreet non. Aliquam etiam erat velit\n                  scelerisque. Lorem ipsum dolor sit amet consectetur. Scelerisque purus semper eget duis at tellus at\n                  urna condimentum.\n                </div>\n              </div>\n            )}\n          />\n          <Wizard.Step\n            render={({ currentStep, next, previous, firstStep, lastStep }) => (\n              <div>\n                <div>\n                  Quis vel eros donec ac odio tempor orci dapibus. Consectetur libero id faucibus nisl tincidunt eget\n                  nullam non. Ultricies leo integer malesuada nunc vel. Ridiculus mus mauris vitae ultricies leo. Lectus\n                  proin nibh nisl condimentum id venenatis a condimentum. Arcu vitae elementum curabitur vitae nunc sed\n                  velit dignissim sodales. Volutpat consequat mauris nunc congue nisi. Nullam eget felis eget nunc.\n                  Tincidunt vitae semper quis lectus nulla at. Velit scelerisque in dictum non. Amet luctus venenatis\n                  lectus magna fringilla. Amet risus nullam eget felis eget nunc lobortis mattis.\n                </div>\n              </div>\n            )}\n          />\n          <Wizard.Step\n            render={({ currentStep, next, previous, firstStep, lastStep }) => (\n              <div>\n                <div>\n                  Volutpat blandit aliquam etiam erat velit. Quis commodo odio aenean sed adipiscing diam donec. Diam\n                  phasellus vestibulum lorem sed. Volutpat commodo sed egestas egestas fringilla phasellus faucibus\n                  scelerisque. Tellus mauris a diam maecenas sed enim ut sem viverra. Amet consectetur adipiscing elit\n                  ut aliquam purus sit. Massa tincidunt dui ut ornare lectus sit amet est. Mi proin sed libero enim.\n                  Varius morbi enim nunc faucibus. Euismod quis viverra nibh cras pulvinar mattis nunc sed blandit. Id\n                  leo in vitae turpis massa sed elementum tempus egestas. Est pellentesque elit ullamcorper dignissim\n                  cras tincidunt lobortis feugiat vivamus. Nullam eget felis eget nunc. Pharetra massa massa ultricies\n                  mi quis hendrerit dolor magna eget. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet\n                  dui. Habitasse platea dictumst vestibulum rhoncus est pellentesque elit.\n                </div>\n              </div>\n            )}\n          />\n          <Wizard.Step\n            render={({ currentStep, next, previous, firstStep, lastStep }) => (\n              <div>\n                <div>\n                  Nec ultrices dui sapien eget mi. Lorem dolor sed viverra ipsum nunc aliquet. Proin sagittis nisl\n                  rhoncus mattis. Duis at tellus at urna condimentum mattis. Diam donec adipiscing tristique risus nec\n                  feugiat in fermentum. Facilisi morbi tempus iaculis urna id volutpat lacus laoreet non. Orci eu\n                  lobortis elementum nibh tellus. Sit amet nisl suscipit adipiscing bibendum est. Sit amet mattis\n                  vulputate enim. Dignissim diam quis enim lobortis. Scelerisque eleifend donec pretium vulputate sapien\n                  nec sagittis aliquam. Euismod elementum nisi quis eleifend quam adipiscing vitae proin sagittis.\n                  Molestie nunc non blandit massa enim nec. Id interdum velit laoreet id donec ultrices.\n                </div>\n              </div>\n            )}\n          />\n          <Wizard.Step\n            render={({ currentStep, next, previous, firstStep, lastStep }) => (\n              <div>\n                <div>\n                  Amet mauris commodo quis imperdiet massa. Tincidunt vitae semper quis lectus nulla at volutpat diam\n                  ut. Porttitor leo a diam sollicitudin tempor id eu. Vitae ultricies leo integer malesuada. Amet\n                  commodo nulla facilisi nullam vehicula ipsum a arcu cursus. Libero volutpat sed cras ornare arcu dui.\n                  Lectus mauris ultrices eros in cursus. Nec feugiat in fermentum posuere urna nec tincidunt praesent\n                  semper. Pellentesque eu tincidunt tortor aliquam. Sollicitudin tempor id eu nisl nunc mi ipsum\n                  faucibus vitae. Semper quis lectus nulla at.\n                </div>\n              </div>\n            )}\n          />\n        </Wizard>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}